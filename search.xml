<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>设计模式几大原则</title>
      <link href="/2020/08/07/she-ji-mo-shi-ji-da-yuan-ze/"/>
      <url>/2020/08/07/she-ji-mo-shi-ji-da-yuan-ze/</url>
      
        <content type="html"><![CDATA[<h1 id="单一设计原则"><a href="#单一设计原则" class="headerlink" title="单一设计原则"></a>单一设计原则</h1><p>一个类，只有一个引起它变化的原因。应该只有一个职责。每一个职责都是一个变化的轴线，如果一个类有一个以上的职责，这些职责就耦合到一起了。这会导致脆弱的设计。当一个职责发生变化时，可能会影响到其它的职责。另外，多个职责耦合在一起，会影响复用性。例如：要实现逻辑和界面的分离。</p><h1 id="开闭原则-Open-Close-Principle"><a href="#开闭原则-Open-Close-Principle" class="headerlink" title="开闭原则(Open Close Principle)"></a>开闭原则(Open Close Principle)</h1><p>开闭原则就是说<strong>对拓展开放，对修改关闭。</strong>在程序需要去拓展的时候，不能去修改原有的代码，实现一个热插拔式的效果。所以一句话概括就是：为了使程序的拓展性好易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类。</p><h1 id="里氏代换原则-Liskov-Substitution-Principle"><a href="#里氏代换原则-Liskov-Substitution-Principle" class="headerlink" title="里氏代换原则(Liskov Substitution Principle)"></a>里氏代换原则(Liskov Substitution Principle)</h1><p>里氏代换原则是面向对象设计的基本原则之一。里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。LSP是继承复用的基石，只有当衍生类可以替换掉基类，软件单位的功能不受影响时，基类才真正被复用，而衍生类也能够在基类的基础上增加新的行为。里氏代换原则是对“开-闭”原则的补充。实现“开-闭”原则的关键步骤就是<strong>抽象化。</strong>而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。</p><h1 id="依赖倒转原则-Dependency-Inversion-Principle"><a href="#依赖倒转原则-Dependency-Inversion-Principle" class="headerlink" title="依赖倒转原则(Dependency Inversion Principle)"></a>依赖倒转原则(Dependency Inversion Principle)</h1><p>依赖倒转原则就是要依赖于抽象，不要依赖于具体。简单的说就是要求对抽象进行编程，不要对实现进行编程，这样就降低了客户与实现模块间的耦合。</p><p>实现开闭原则的关键是抽象化，并且从抽象化导出具体实现，如果说开闭原则是面向对象设计的目标的话，那么依赖倒转就是面向对象设计的主要手段。</p><h1 id="接口隔离原则-Interface-Segregation-Principle"><a href="#接口隔离原则-Interface-Segregation-Principle" class="headerlink" title="接口隔离原则(Interface Segregation Principle)"></a>接口隔离原则(Interface Segregation Principle)</h1><p>这个原则的意思是：使用多个隔离的接口，比使用单个接口好。还是要降低类之间的耦合度的意思，从这儿我们可以看出，其实设计模式就是一个软件的设计思想，从大型软件架构出发，为了升级和维护方。所以上文中多次出现：降低耦合、降低依赖。</p><h1 id="合成复用原则-Composite-Reuse-Principle"><a href="#合成复用原则-Composite-Reuse-Principle" class="headerlink" title="合成复用原则(Composite Reuse Principle)"></a>合成复用原则(Composite Reuse Principle)</h1><p>合成复用原则就是指在一个新的对象里通过关联关系(包括组合关系和聚合关系)来使用一些已有的对象，使之成为新对象的一部分；新对象通过委派机制调用已有对象的方法达到复用其已有的功能的目的。简言之：要尽量使用组合/聚合关系 ，少用继承。</p><h1 id="迪米特原则-最少知道原则-Demeter-Principle"><a href="#迪米特原则-最少知道原则-Demeter-Principle" class="headerlink" title="迪米特原则(最少知道原则)(Demeter Principle)"></a>迪米特原则(最少知道原则)(Demeter Principle)</h1><p>为什么叫最少知道原则，就是说：一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立。这样，当一个模块修改时，就会尽量少的影响其他模块，扩展会相对容易，这是对软件实体间通信的限制，它要求限制软件实体之间通信的宽度和深度。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文章2</title>
      <link href="/2020/08/07/ce-shi-wen-zhang-2/"/>
      <url>/2020/08/07/ce-shi-wen-zhang-2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2020-08-07博客测试文章</title>
      <link href="/2020/08/07/ce-shi-wen-zhang/"/>
      <url>/2020/08/07/ce-shi-wen-zhang/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> Java,MySQL,Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/08/07/hello-world/"/>
      <url>/2020/08/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
